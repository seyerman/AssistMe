@model AssistMeProject.Models.Question
<!-- ViewData["IsQuestionMin"]=bool -->
@{
    ViewData["IsQuestionMin"] = ViewData.ContainsKey("IsQuestionMin") ? ViewData["IsQuestionMin"] : true;
}
<article class="question question-type-normal @Html.DisplayName(((bool)ViewData["IsQuestionMin"])?"":"single-question")">

    <h2>
        <a  asp-action="Details" asp-route-id="@Model.Id"> @Html.DisplayFor(modelItem => Model.Title)</a>
    </h2>
    <a class="question-report" href="#">Report</a>
    <div class="question-type-main"><i class="icon-question-sign"></i>Question</div>
    @if ((bool)ViewData["IsQuestionMin"])
    {
        <div class="question-author">
            <a href="#" original-title="@Html.DisplayFor(m=>m.User.USERNAME)" class="question-author-img tooltip-n"><img alt="" src="@Html.DisplayFor(m => m.User.PHOTO)"></a>
        </div>

        <p><h3><a href="#">@Html.DisplayFor(m => m.User.USERNAME)</a> </h3></p>
	}


<div class="question-inner">
    <div class="clearfix"></div>
    <p class="question-desc">@Html.DisplayFor(modelItem => Model.Description)</p>

    @{ var n = DateTime.Now;
        if (Model.AskAgain)
        {
            <span class="question-answered"><i class="icon-star"></i>UP</span>

        }
        else if (n < Model.Date.AddDays(1))
        {
            <span class="question-answered"><i class="icon-star"></i>NEW</span>
        }


        if (Model.Answers.Any(a => a.correctAnswer))
        {
            <span class="question-answered question-answered-done"><i class="icon-ok"></i>Solved</span>
        }
        if (Model.Insignia != null && Model.Insignia.Equals("SEEN BEFORE"))
        {
            <span class="question-answered"><i class="icon-eye-open"></i>SEEN BEFORE </span>
        }

        if (Model.Answers.Count > 0)
        {
            if (Model.Answers.Count > 10)
            {
                <span class="question-answered question-answered-done"><i class="icon-star"></i>ROCKSTAR </span>
            }
            else
            {
                <span class="question-answered question-answered-done"><i class="icon-ok"></i>Has received Answers</span>
            }
        }
        else if (n >= Model.Date.AddDays(1))
        {
            <span class="question-comment"> <a asp-action="UpdateDate" asp-route-id="@Model.Id"> <i class="@Html.DisplayName(true ? "icon-spinner" : "icon-spinner")"></i> Ask Again</a></span>
        }



    }
    <span id="question_vote_@Model.Id" onclick="interaction('iv', @ViewData["actualUserID"],@Model.Id,'question_vote_@Model.Id' )" class="question-favorite">
        <i class="@Html.DisplayName(Model.UserVote((int)@ViewData["actualUserID"])?"icon-star":"icon-star-empty")"></i>
        <span>@Html.DisplayFor(model => model.InterestingVotes.Count)</span>
    </span>
    <span class="question-category">
        <a href="#">
            <i class="icon-folder-close"></i>
            @{
                foreach (QuestionStudio qs in Model.QuestionStudios)
                {
                    string text = qs.Studio.Name;
                    if (Model.QuestionStudios.Last() != qs)
                    {
                        text += ", ";
                    }
                    <a href="#">@text</a>
                }
            }
        </a>
    </span>
    <span class="question-date"><i class="icon-time"></i>@Html.DisplayFor(modelItem => Model.Date)</span>
    <span class="question-view"><i class="icon-user"></i>@Model.Views.Count views</span>
    <span class="question-comment"><a asp-action="Details" asp-route-id="@Model.Id"><i class="icon-comment"></i>@Html.DisplayFor(model => model.Answers.Count) Answer</a></span>



    <div class="clearfix"></div>
</div>
</article>
